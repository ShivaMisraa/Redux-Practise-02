{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\n// export const  INCREMENT = 'increment'\n\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    decrease(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"decrease\") {\n    return {\n      counter: state.counter - action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n  return state;\n};\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["createStore","createSlice","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","amount","decrease","toggleCounter","counterReducer","type","store"],"sources":["C:/Users/shiva/Desktop/Redux-Practise-02/Redux-Practise-02/src/Store/index.js"],"sourcesContent":["import { createStore } from \"redux\";\r\nimport {createSlice} from \"@reduxjs/toolkit\"\r\n\r\n// export const  INCREMENT = 'increment'\r\n\r\nconst initialState= { counter: 0, showCounter:true }\r\n\r\nconst counterSlice = createSlice ({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    increment(state){\r\n      state.counter ++;\r\n    },\r\n    decrement(state){\r\n      state.counter--;\r\n    },\r\n    increase(state, action){\r\n      state.counter= state.counter+ action.amount\r\n    },\r\n    decrease(state, action){\r\n      state.counter= state.counter+ action.amount;\r\n    },\r\n    toggleCounter(state){\r\n      state.showCounter= !state.showCounter;\r\n    }\r\n  }\r\n})\r\n\r\nconst counterReducer = (state = initialState , action) => {\r\n  if (action.type === \"increment\") {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter\r\n    };\r\n  }\r\n  if (action.type === \"decrement\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n      showCounter: state.showCounter\r\n    };\r\n  }\r\n  if (action.type === \"increase\") {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter\r\n\r\n    };\r\n  }\r\n  if (action.type === \"decrease\") {\r\n    return {\r\n      counter: state.counter - action.amount,\r\n      showCounter: state.showCounter\r\n    };\r\n  }\r\n  if(action.type === \"toggle\"){\r\n    return{\r\n      showCounter: !state.showCounter,\r\n      counter: state.counter\r\n    }\r\n  }\r\n  return state;\r\n};\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAAQC,WAAW,QAAO,kBAAkB;;AAE5C;;AAEA,MAAMC,YAAY,GAAE;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAC;AAAK,CAAC;AAEpD,MAAMC,YAAY,GAAGJ,WAAW,CAAE;EAChCK,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAC;MACdA,KAAK,CAACN,OAAO,EAAG;IAClB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAC;MACdA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDQ,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAC;MACrBH,KAAK,CAACN,OAAO,GAAEM,KAAK,CAACN,OAAO,GAAES,MAAM,CAACC,MAAM;IAC7C,CAAC;IACDC,QAAQA,CAACL,KAAK,EAAEG,MAAM,EAAC;MACrBH,KAAK,CAACN,OAAO,GAAEM,KAAK,CAACN,OAAO,GAAES,MAAM,CAACC,MAAM;IAC7C,CAAC;IACDE,aAAaA,CAACN,KAAK,EAAC;MAClBA,KAAK,CAACL,WAAW,GAAE,CAACK,KAAK,CAACL,WAAW;IACvC;EACF;AACF,CAAC,CAAC;AAEF,MAAMY,cAAc,GAAGA,CAACP,KAAK,GAAGP,YAAY,EAAGU,MAAM,KAAK;EACxD,IAAIA,MAAM,CAACK,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACLd,OAAO,EAAEM,KAAK,CAACN,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEK,KAAK,CAACL;IACrB,CAAC;EACH;EACA,IAAIQ,MAAM,CAACK,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACLd,OAAO,EAAEM,KAAK,CAACN,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEK,KAAK,CAACL;IACrB,CAAC;EACH;EACA,IAAIQ,MAAM,CAACK,IAAI,KAAK,UAAU,EAAE;IAC9B,OAAO;MACLd,OAAO,EAAEM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,MAAM;MACtCT,WAAW,EAAEK,KAAK,CAACL;IAErB,CAAC;EACH;EACA,IAAIQ,MAAM,CAACK,IAAI,KAAK,UAAU,EAAE;IAC9B,OAAO;MACLd,OAAO,EAAEM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,MAAM;MACtCT,WAAW,EAAEK,KAAK,CAACL;IACrB,CAAC;EACH;EACA,IAAGQ,MAAM,CAACK,IAAI,KAAK,QAAQ,EAAC;IAC1B,OAAM;MACJb,WAAW,EAAE,CAACK,KAAK,CAACL,WAAW;MAC/BD,OAAO,EAAEM,KAAK,CAACN;IACjB,CAAC;EACH;EACA,OAAOM,KAAK;AACd,CAAC;AAED,MAAMS,KAAK,GAAGlB,WAAW,CAACgB,cAAc,CAAC;AAEzC,eAAeE,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}